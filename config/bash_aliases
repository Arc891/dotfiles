# Bash aliases
alias ll='pwd && ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias lsl='pwd && ls'
alias cd.='cd ..'
alias cd~='cd $HOME'
alias cd-='cd -'

DOTFILES="$HOME/.dotfiles"
CODING="$HOME/Documents/Personal/Coding"

cons() { . $DOTFILES/scripts/conservation_mode.sh "$1"; }
swap_cons() { . $DOTFILES/scripts/swap_cons_mode.sh; }

memus() { ps -aux | rg "$1" | awk '{print $4}' | awk '{s+=$1} END {print s}'; }

cus() { ps -aux | rg "$1" | awk '{print $3}' | awk '{s+=$1} END {print s/16}'; }

usage() { echo "CPU: $(cus $1)%, MEM: $(memus $1)%"; }


push() {
	git add *;
	git commit -m "$1";
	git push;
}

mkreponew() {
	if [[ $# < 2 ]]
	then
		echo "Too few arguments ($#). Usage: createrepo {repo_name} {true / false (for private)}"
	else
		TOKEN="$(cat $HOME/.token)"	
		curl -s -u Arc891:$TOKEN https://api.github.com/user/repos -d '{"name":"'$1'","private":'$2'}'; 
		
		mcd $1;
		echo "# $1" > README.md;
		git init -b main;
		git add *
		git commit -m "Initial commit";
		git remote add origin git@github.com:Arc891/$1.git;
		git push -u origin main;
		xdg-open https://github.com/Arc891/$1 >/dev/null;
	fi	
}


mkrepo() {
	if [[ $# < 2 ]]
	then
		echo "Too few arguments ($#). Usage: createrepo {repo_name} {true / false (for private)}"
	else
		TOKEN="$(cat $HOME/.token)"	
		curl -s -u Arc891:$TOKEN https://api.github.com/user/repos -d '{"name":"'$1'","private":'$2'}'; 
		
		git init -b main;
		git add *
		git commit -m "Initial commit";
		git remote add origin git@github.com:Arc891/$1.git;
		git push -u origin main;
		xdg-open https://github.com/Arc891/$1 >/dev/null;
	fi	
}

rmrepo() {
	TOKEN="$(cat $HOME/.token)";
	curl \
  	-X DELETE \
  	-H "Accept: application/vnd.github.v3+json" \
  	-H "Authorization: token $TOKEN" \
  	https://api.github.com/repos/Arc891/$1
	cd .. && rm -rf $1;
}

trans() { sh -c "xprop -f _NET_WM_WINDOW_OPACITY 32c -set _NET_WM_WINDOW_OPACITY $(printf 0x%x $((0xffffffff * $1 / 100)))"; }

mcd() { mkdir -p $1; cd $1; }

school() { cd $HOME/Documents/School/BScCSy"$1"/Period"$2"/"$3"; }
scopen() { school "$1" "$2" && open "$3" > /dev/null 2>&1; }

extract() {
	if [ -z "$1" ]; then
    		# display usage if no parameters given
    		echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    		echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
    		return 1
 	else
    		for n in $@
    		do
      			if [ -f "$n" ] ; then
          		case "${n%,}" in
            			*.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar) 
                         		     tar xvf "$n"       ;;
            			*.lzma)      unlzma ./"$n"      ;;
            			*.bz2)       bunzip2 ./"$n"     ;;
            			*.rar)       unrar x -ad ./"$n" ;;
            			*.gz)        gunzip ./"$n"      ;;
            			*.zip)       unzip ./"$n"       ;;
            			*.z)         uncompress ./"$n"  ;;
            			*.7z|*.arj|*.cab|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.rpm|*.udf|*.wim|*.xar)
                         		     7z x ./"$n"        ;;
            			*.xz)        unxz ./"$n"        ;;
            			*.exe)       cabextract ./"$n"  ;;
            			*)
                         	echo "extract: '$n' - unknown archive method"
                         	return 1
                         	;;
          		esac
      			else
          			echo "'$n' - file does not exist"
          			return 1
      			fi
    		done
	fi
}


alias idea='/opt/idea/idea-IC-213.6777.52/bin/idea.sh >/dev/null 2>/dev/null || bg &'
alias battery='sudo tlp-stat -b'

alias gts='git status'
alias ga='f(){ git add "$1"; unset -f f; }; f'
alias gaa='git add *'
alias gp='git push'
alias gpl='git pull'
alias gcm='f(){ git commit -m "$1"; unset -f f; }; f'
alias gopen='f(){ xdg-open https://github.com/Arc891/$1 >/dev/null; unset -f f; }; f'
alias gurl='git remote get-url origin'

alias open='f(){ xdg-open $("pwd")/"$1"; unset -f f; }; f'
alias coding='f(){ cd $CODING/"$1"; unset -f f; }; f'
alias notes='f(){ cd $HOME/Documents/Personal/Notes/"$1"; unset -f f; }; f'
alias cpd='f(){ coding Python/"$1"; unset -f f; }; f'
alias hc='cpd HackerChat'
alias hch='p $CODING/Python/HackerChat/hackerchat.py'
alias hs='hc && p $CODING/Python/HackerChat/hackerserver.py'
alias dot='f() { cd $HOME/.dotfiles/"$1"; unset -f f; }; f'
alias cnf='f() { cd $HOME/.config/"$1"; unset -f f; }; f'
alias home='cd $HOME'

alias hsk='school 3 1 EP/Haskell'
alias scl='cd $HOME/Documents/School'

alias bws='rbw sync'

alias v='vim'
alias sv='sudo vim'
alias vb='v $HOME/.bash_aliases'
alias vbr='v $HOME/.bashrc'
alias vms='vim $DOTFILES/scripts/vim_shortcuts.txt'

alias rf='source $HOME/.bashrc'
alias rc='clear && rf'
alias cl='clear && welcome'

alias yml='code $HOME/.config/alacritty/alacritty.yml'
alias esp='code $HOME/.config/espanso'

alias q='exit 0'
alias p='python3'

alias sup='sudo apt update '
alias supg='sup && sudo apt upgrade '

alias fhere='find . -name '
alias fall='sudo find / -name '

alias smt='tree -h -L 2'

alias gdm-banner='v /etc/dconf/db/gdm.d/01-banner-message' 

alias spia='spicetify apply'
alias spith='f(){ spicetify config current_theme "$1"; unset -f f; }; f'
alias spics='f(){ spicetify config color_scheme "$1"; unset -f f; }; f'

alias matrix1='cat $DOTFILES/ascii/matrixSlant1'
alias matrix2='cat $DOTFILES/ascii/matrixSlant2'
alias welcome='cat $DOTFILES/ascii/welcomeSlant'

#neofetch
welcome
